import random
import string
from aiogram import Router, F
from aiogram.types import Message
from bot.keyboards import get_cancel_kb, get_admin_menu_kb

from src.database.db_init import db

admin_router = Router()

@admin_router.message(F.text == "üîê –°–æ–∑–¥–∞—Ç—å –∫–æ–¥")
async def create_code(message: Message):
    user_id = message.from_user.id
    print(f"[INFO] User {user_id} requested code creation")
    
    user = await db.get_user(user_id)
    
    if not user or user['role'] != 'admin':
        print(f"[WARN] User {user_id} has no access to create codes")
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return
    
    # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Å–ª—É—á–∞–π–Ω—ã–π –∫–æ–¥
    code = ''.join(random.choices(string.ascii_uppercase + string.digits, k=8))
    staff_code = f"STAFF{code}"
    admin_code = f"ADMIN{code}"
    
    print(f"[INFO] Generated staff code: {staff_code}")
    print(f"[INFO] Generated admin code: {admin_code}")
    
    await db.create_activation_code(staff_code, "staff")
    await db.create_activation_code(admin_code, "admin")
    
    print(f"[INFO] Activation codes saved to database for user {user_id}")
    
    await message.answer(
        "‚úÖ –ö–æ–¥—ã –∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω—ã:\n\n"
        f"üë∑ –î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞: `{staff_code}`\n"
        f"üë®‚Äçüíº –î–ª—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: `{admin_code}`\n\n"
        "–ö–æ–¥—ã –æ–¥–Ω–æ—Ä–∞–∑–æ–≤—ã–µ –∏ –¥–µ–π—Å—Ç–≤—É—é—Ç –±–µ—Å—Å—Ä–æ—á–Ω–æ.",
        parse_mode="Markdown",
        reply_markup=get_admin_menu_kb()
    )
    print(f"[INFO] Activation codes sent to user {user_id}")

@admin_router.message(F.text == "üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
async def show_stats(message: Message):
    user_id = message.from_user.id
    print(f"[INFO] User {user_id} requested system statistics")
    
    user = await db.get_user(user_id)
    
    if not user or user['role'] != 'admin':
        print(f"[WARN] User {user_id} has no access to view statistics")
        await message.answer("–£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ —ç—Ç–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.")
        return
    
    stats = await db.get_statistics()
    
    print(f"[INFO] Statistics retrieved for user {user_id}")
    
    await message.answer(
        f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏—Å—Ç–µ–º—ã:\n\n"
        f"üë• –í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {stats['total_users']}\n"
        f"‚îú –ö–ª–∏–µ–Ω—Ç–æ–≤: {stats['clients']}\n"
        f"‚îú –°–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤: {stats['staff']}\n"
        f"‚îî –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤: {stats['admins']}\n\n"
        f"üìã –û–±—Ä–∞—â–µ–Ω–∏–π: {stats['total_requests']}\n"
        f"‚ùì –í–æ–ø—Ä–æ—Å–æ–≤: {stats['questions']}\n"
        f"üìû –ó–≤–æ–Ω–∫–æ–≤: {stats['callbacks']}\n"
        f"üí° –ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–π: {stats['suggestions']}\n"
        f"‚ö†Ô∏è –ñ–∞–ª–æ–±: {stats['complaints']}",
        reply_markup=get_admin_menu_kb()
    )
    print(f"[INFO] Statistics sent to user {user_id}")
